{"version":3,"file":"static/js/756.ee50bdee.chunk.js","mappings":"uNAGaA,EAASC,EAAAA,GAAAA,OAAH,2JAWNC,EAASD,EAAAA,GAAAA,GAAH,0C,SCZnB,ECCkB,SAAC,GAA2B,IAAzBE,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAC5B,OACE,UAACF,EAAD,WACGC,EAAQE,KADX,MACoBF,EAAQG,QAC1B,SAACN,EAAD,CACEO,KAAK,SACLC,QAAS,WACPJ,EAASD,EAAQM,GAClB,EAJH,sBAUL,E,8BCfD,ECIoB,WAClB,IAAMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAASF,EAAAA,EAAAA,IAAYG,EAAAA,IAErBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAmBP,EAASG,QAAO,SAAAV,GAAO,OAC9CA,EAAQE,KAAKa,cAAcC,SAASN,EADU,IAIhD,OACE,wBACGI,EAAiBG,KAAI,SAAAjB,GAAO,OAC3B,SAAC,EAAD,CACEA,QAASA,EAETC,SAAU,kBAAMW,GAASM,EAAAA,EAAAA,IAAclB,EAAQM,IAArC,GADLN,EAAQM,GAHY,KASlC,ECzBYa,EAAcrB,EAAAA,GAAAA,MAAH,0CAIXsB,EAActB,EAAAA,GAAAA,MAAH,qK,UCJxB,ECGe,WAEb,IAAMc,GAAWC,EAAAA,EAAAA,MAKjB,OACE,UAACM,EAAD,oCAEE,SAACC,EAAD,CAAahB,KAAK,OAAOF,KAAK,OAAOmB,SANpB,SAAAC,GACnBV,GAASW,EAAAA,EAAAA,GAAqBD,EAAEE,OAAOC,MAAMV,cAAcW,QAC5D,MAOF,EChBYC,EAAY7B,EAAAA,GAAAA,IAAH,wBAGT8B,EAAU9B,EAAAA,GAAAA,IAAH,sG,UCHpB,ECMiB,WACf,IAAMc,GAAWC,EAAAA,EAAAA,MAEXN,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBoB,GAAYrB,EAAAA,EAAAA,IAAYsB,EAAAA,IACxBC,GAAQvB,EAAAA,EAAAA,IAAYwB,EAAAA,IAO1B,OALAC,EAAAA,EAAAA,YAAU,WACRrB,GAASsB,EAAAA,EAAAA,MACV,GAAE,CAACtB,KAIF,UAACe,EAAD,YACE,UAACC,EAAD,uBAAmBrB,EAAS4B,OAA5B,gBACA,SAAC,EAAD,IACCN,IAAcE,IAAS,kDACvBxB,EAAS4B,OAAS,IAAK,SAAC,EAAD,MAG7B,C,gIC5BM,IAAM1B,EAAiB,SAAA2B,GAAK,OAAIA,EAAM7B,SAAS8B,KAAnB,EAEtB1B,EAAe,SAAAyB,GAAK,OAAIA,EAAM1B,OAAO4B,OAAjB,EAEpBR,EAAkB,SAAAM,GAAK,OAAIA,EAAM7B,SAASsB,SAAnB,EAEvBG,EAAc,SAAAI,GAAK,OAAIA,EAAM7B,SAASwB,KAAnB,C","sources":["components/ContactEl/ContactEl.styled.jsx","components/ContactEl/index.js","components/ContactEl/ContactEl.jsx","components/ContactList/index.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/index.js","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/index.js","pages/Contacts/Contacts.jsx","redux/contacts/selectors.js"],"sourcesContent":["import styled from \"styled-components\";\n\n\nexport const Button = styled.button`\n  border-radius: 4px;\n  border-color: transparent;\n\n  margin-left: 16px;\n\n  &:hover, :focus {\n    background: #1e90ff;\n  }\n`;\n\nexport const ListEl = styled.li`\n  margin: 4px 0;\n`;\n","import ContactEl from \"./ContactEl\";\n\nexport default ContactEl;","import { PropTypes} from 'prop-types'\nimport { Button, ListEl } from './ContactEl.styled';\n\nconst ContactEl = ({ contact, onDelete }) => {\n  return (\n    <ListEl>\n      {contact.name} : {contact.number}\n      <Button\n        type=\"button\"\n        onClick={() => {\n          onDelete(contact.id);\n        }}\n      >\n        Delete\n      </Button>\n    </ListEl>\n  );\n};\n\n\nContactEl.propTypes = {\n  contact: PropTypes.objectOf(PropTypes.string).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactEl;","import ContactList from \"./ContactList\";\n\nexport default ContactList\n","import { PropTypes } from 'prop-types';\nimport ContactEl from 'components/ContactEl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const filtringContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter)\n  );\n\n  return (\n    <ul>\n      {filtringContacts.map(contact => (\n        <ContactEl\n          contact={contact}\n          key={contact.id}\n          onDelete={() => dispatch(deleteContact(contact.id))}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  filtringContacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)),\n};\n\nexport default ContactList;\n","import styled from \"styled-components\";\n\nexport const LabelFilter = styled.label`\n  display: grid;\n`;\n\nexport const InputFilter = styled.input`\n  margin: 4px 0 8px 0;\n  width: 120px;\n\n  &:focus {\n    outline: none;\n    border-radius: 4px;\n    box-shadow: 0 0 10px #1e90ff;\n  }\n`;","import Filter from \"./Filter\";\n\nexport default Filter","import { LabelFilter, InputFilter } from \"./Filter.styled\";\n// \nimport { useDispatch } from 'react-redux';\nimport { filtringContactsUser } from 'redux/contacts/filterSlice';\n\nconst Filter = () => {\n\n  const dispatch = useDispatch();\n  \n  const handleFilter = e => {\n    dispatch(filtringContactsUser(e.target.value.toLowerCase().trim()));\n  }\n  return (\n    <LabelFilter>\n       Find contacts by name\n      <InputFilter type=\"text\" name=\"name\" onChange={handleFilter}/>\n    </LabelFilter>\n  );\n};\n\nexport default Filter;","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n`;\n\nexport const Counter = styled.div`\n  padding: 10px 0px;\n  text-decoration: underline;\n  font-weight: 600;\n  \n`;","import Contacts from \"./Contacts\";\n\nexport default Contacts","import ContactList from \"components/ContactList\"\nimport Filter from \"components/Filter\"\nimport { Container, Counter } from \"./Contacts.styled\"\nimport { selectContacts, selectError, selectIsLoading } from \"redux/contacts/selectors\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useEffect } from \"react\"\nimport { fetchContacts } from \"redux/contacts/operations\"\n\nconst Contacts = () => {\n  const dispatch = useDispatch()\n\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts())\n  }, [dispatch])\n\n\n  return (\n    <Container>\n      <Counter>You have {contacts.length} contacts</Counter>\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      {contacts.length > 0 && <ContactList />}\n    </Container>\n  );\n}\n\n\nexport default Contacts","export const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter.filtred;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;"],"names":["Button","styled","ListEl","contact","onDelete","name","number","type","onClick","id","contacts","useSelector","selectContacts","filter","selectFilter","dispatch","useDispatch","filtringContacts","toLowerCase","includes","map","deleteContact","LabelFilter","InputFilter","onChange","e","filtringContactsUser","target","value","trim","Container","Counter","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","length","state","items","filtred"],"sourceRoot":""}